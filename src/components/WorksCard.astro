---
import Card from "./Card/index.astro";
---

<Card colSpan="lg:col-span-1" rowSpan="md:row-span-1" title="Works and Projects" href="/projects">
  <div class="absolute inset-0 z-[-1] opacity-20 flex flex-wrap gap-2 rotate-40">
    <pre class="text-xs text-gray-600">"return await fetch('/api/data');"</pre>
    <pre class="text-xs text-gray-600">"return a * b;"</pre>
    <pre class="text-xs text-gray-600">"const array = [1, 2, 3, 4, 5];"</pre>
    <pre class="text-xs text-gray-600">"array.map(x => x * 2);"</pre>
    <pre class="text-xs text-gray-600">"const result = await run();"</pre>
    <pre class="text-xs text-gray-600">"return new Promise((resolve) => resolve());"</pre>
    <pre class="text-xs text-gray-600">"const sum = (...args) => args.reduce((a,b) => a + b);"</pre>
    <pre class="text-xs text-gray-600">"const [data, setData] = useState(null);"</pre>
    <pre class="text-xs text-gray-600">"const router = express.Router();"</pre>
    <pre class="text-xs text-gray-600">"app.listen(3000, () => console.log('Ready'));"</pre>
    <pre class="text-xs text-gray-600">"return await fetch('/api/data');"</pre>
    <pre class="text-xs text-gray-600">"return a * b;"</pre>
    <pre class="text-xs text-gray-600">"const array = [1, 2, 3, 4, 5];"</pre>
    <pre class="text-xs text-gray-600">"array.map(x => x * 2);"</pre>
    <pre class="text-xs text-gray-600">"const result = await run();"</pre>
    <pre class="text-xs text-gray-600">"return new Promise((resolve) => resolve());"</pre>
    <pre class="text-xs text-gray-600">"const sum = (...args) => args.reduce((a,b) => a + b);"</pre>
    <pre class="text-xs text-gray-600">"const [data, setData] = useState(null);"</pre>
    <pre class="text-xs text-gray-600">"const router = express.Router();"</pre>
    <pre class="text-xs text-gray-600">"app.listen(3000, () => console.log('Ready'));"</pre>
    <pre class="text-xs text-gray-600">"return await fetch('/api/data');"</pre>
    <pre class="text-xs text-gray-600">"return a * b;"</pre>
    <pre class="text-xs text-gray-600">"const array = [1, 2, 3, 4, 5];"</pre>
    <pre class="text-xs text-gray-600">"array.map(x => x * 2);"</pre>
    <pre class="text-xs text-gray-600">"const result = await run();"</pre>
    <pre class="text-xs text-gray-600">"return new Promise((resolve) => resolve());"</pre>
    <pre class="text-xs text-gray-600">"const sum = (...args) => args.reduce((a,b) => a + b);"</pre>
    <pre class="text-xs text-gray-600">"const [data, setData] = useState(null);"</pre>
    <pre class="text-xs text-gray-600">"const router = express.Router();"</pre>
    <pre class="text-xs text-gray-600">"app.listen(3000, () => console.log('Ready'));"</pre>
    <pre class="text-xs text-gray-600">"return await fetch('/api/data');"</pre>
    <pre class="text-xs text-gray-600">"return a * b;"</pre>
    <pre class="text-xs text-gray-600">"const array = [1, 2, 3, 4, 5];"</pre>
    <pre class="text-xs text-gray-600">"array.map(x => x * 2);"</pre>
    <pre class="text-xs text-gray-600">"const result = await run();"</pre>
    <pre class="text-xs text-gray-600">"return new Promise((resolve) => resolve());"</pre>
    <pre class="text-xs text-gray-600">"const sum = (...args) => args.reduce((a,b) => a + b);"</pre>
    <pre class="text-xs text-gray-600">"const [data, setData] = useState(null);"</pre>
    <pre class="text-xs text-gray-600">"const router = express.Router();"</pre>
    <pre class="text-xs text-gray-600">"app.listen(3000, () => console.log('Ready'));"</pre>
    <pre class="text-xs text-gray-600">"return await fetch('/api/data');"</pre>
    <pre class="text-xs text-gray-600">"return a * b;"</pre>
    <pre class="text-xs text-gray-600">"const array = [1, 2, 3, 4, 5];"</pre>
    <pre class="text-xs text-gray-600">"array.map(x => x * 2);"</pre>
    <pre class="text-xs text-gray-600">"const result = await run();"</pre>
    <pre class="text-xs text-gray-600">"return new Promise((resolve) => resolve());"</pre>
    <pre class="text-xs text-gray-600">"const sum = (...args) => args.reduce((a,b) => a + b);"</pre>
    <pre class="text-xs text-gray-600">"const [data, setData] = useState(null);"</pre>
    <pre class="text-xs text-gray-600">"const router = express.Router();"</pre>
    <pre class="text-xs text-gray-600">"app.listen(3000, () => console.log('Ready'));"</pre>
    <pre class="text-xs text-gray-600">"return await fetch('/api/data');"</pre>
    <pre class="text-xs text-gray-600">"return a * b;"</pre>
    <pre class="text-xs text-gray-600">"const array = [1, 2, 3, 4, 5];"</pre>
    <pre class="text-xs text-gray-600">"array.map(x => x * 2);"</pre>
    <pre class="text-xs text-gray-600">"const result = await run();"</pre>
    <pre class="text-xs text-gray-600">"return new Promise((resolve) => resolve());"</pre>
    <pre class="text-xs text-gray-600">"const sum = (...args) => args.reduce((a,b) => a + b);"</pre>
    <pre class="text-xs text-gray-600">"const [data, setData] = useState(null);"</pre>
    <pre class="text-xs text-gray-600">"const router = express.Router();"</pre>
    <pre class="text-xs text-gray-600">"app.listen(3000, () => console.log('Ready'));"</pre>
    <pre class="text-xs text-gray-600">"return await fetch('/api/data');"</pre>
    <pre class="text-xs text-gray-600">"return a * b;"</pre>
    <pre class="text-xs text-gray-600">"const array = [1, 2, 3, 4, 5];"</pre>
    <pre class="text-xs text-gray-600">"array.map(x => x * 2);"</pre>
    <pre class="text-xs text-gray-600">"const result = await run();"</pre>
    <pre class="text-xs text-gray-600">"return new Promise((resolve) => resolve());"</pre>
    <pre class="text-xs text-gray-600">"const sum = (...args) => args.reduce((a,b) => a + b);"</pre>
    <pre class="text-xs text-gray-600">"const [data, setData] = useState(null);"</pre>
    <pre class="text-xs text-gray-600">"const router = express.Router();"</pre>
    <pre class="text-xs text-gray-600">"app.listen(3000, () => console.log('Ready'));"</pre>
    <pre class="text-xs text-gray-600">"return await fetch('/api/data');"</pre>
    <pre class="text-xs text-gray-600">"return a * b;"</pre>
    <pre class="text-xs text-gray-600">"const array = [1, 2, 3, 4, 5];"</pre>
    <pre class="text-xs text-gray-600">"array.map(x => x * 2);"</pre>
    <pre class="text-xs text-gray-600">"const result = await run();"</pre>
    <pre class="text-xs text-gray-600">"return new Promise((resolve) => resolve());"</pre>
    <pre class="text-xs text-gray-600">"const sum = (...args) => args.reduce((a,b) => a + b);"</pre>
    <pre class="text-xs text-gray-600">"const [data, setData] = useState(null);"</pre>
    <pre class="text-xs text-gray-600">"const router = express.Router();"</pre>
    <pre class="text-xs text-gray-600">"app.listen(3000, () => console.log('Ready'));"</pre>
    <pre class="text-xs text-gray-600">"return await fetch('/api/data');"</pre>
    <pre class="text-xs text-gray-600">"return a * b;"</pre>
    <pre class="text-xs text-gray-600">"const array = [1, 2, 3, 4, 5];"</pre>
    <pre class="text-xs text-gray-600">"array.map(x => x * 2);"</pre>
    <pre class="text-xs text-gray-600">"const result = await run();"</pre>
    <pre class="text-xs text-gray-600">"return new Promise((resolve) => resolve());"</pre>
    <pre class="text-xs text-gray-600">"const sum = (...args) => args.reduce((a,b) => a + b);"</pre>
    <pre class="text-xs text-gray-600">"const [data, setData] = useState(null);"</pre>
    <pre class="text-xs text-gray-600">"const router = express.Router();"</pre>
    <pre class="text-xs text-gray-600">"app.listen(3000, () => console.log('Ready'));"</pre>
    <pre class="text-xs text-gray-600">"return await fetch('/api/data');"</pre>
    <pre class="text-xs text-gray-600">"return a * b;"</pre>
    <pre class="text-xs text-gray-600">"const array = [1, 2, 3, 4, 5];"</pre>
    <pre class="text-xs text-gray-600">"array.map(x => x * 2);"</pre>
    <pre class="text-xs text-gray-600">"const result = await run();"</pre>
    <pre class="text-xs text-gray-600">"return new Promise((resolve) => resolve());"</pre>
    <pre class="text-xs text-gray-600">"const sum = (...args) => args.reduce((a,b) => a + b);"</pre>
    <pre class="text-xs text-gray-600">"const [data, setData] = useState(null);"</pre>
    <pre class="text-xs text-gray-600">"const router = express.Router();"</pre>
    <pre class="text-xs text-gray-600">"app.listen(3000, () => console.log('Ready'));"</pre>
  </div>
</Card>
